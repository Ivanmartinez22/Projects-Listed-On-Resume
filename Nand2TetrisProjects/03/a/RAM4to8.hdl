// File: RAM4to8.hdl
// Author: Ivan Matinez
// Date: 10/04/2021
// Section: 505
// E-mail: Ivanattexas@tamu.edu 
// Description:
//The content of this file implements a ram8 built from ram4s




// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4to8{
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // use dmux to do it
    DMux16(in = in, sel = address[0], a = r1, b = r2);
    DMux(in = load, sel = address[0], a = l1, b = l2);
    RAM4(in = r1, load = l1, address = address[1..2], out = out1);
    RAM4(in = r2, load = l2, address = address[1..2], out = out2);
    Mux16(a = out1, b = out2, sel = address[0], out = out);
}